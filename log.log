2021-12-14T15:59:14Z [INFO]  Starting Chainlink Node 1.0.1 at commit 03448cf24275227d69fe33bf2c4849dd64b56a89 cmd/local_client.go:60           InstanceUUID=f580d136-fcaa-4e6c-80b0-31f48e011702 SHA=03448cf24275227d69fe33bf2c4849dd64b56a89 Version=1.0.1 id=boot 
creating application: failed to initialize ORM: initializeORM#Migrate: ERROR 0001_initial.sql: failed to run SQL migration: failed to execute SQL query "CREATE TYPE public.eth_tx_attempts_state AS ENUM (\n    'in_progress',\n    'insufficient_eth',\n    'broadcast'\n);\nCREATE TYPE public.eth_txes_state AS ENUM (\n    'unstarted',\n    'in_progress',\n    'fatal_error',\n    'unconfirmed',\n    'confirmed_missing_receipt',\n    'confirmed'\n);\nCREATE TYPE public.run_status AS ENUM (\n    'unstarted',\n    'in_progress',\n    'pending_incoming_confirmations',\n    'pending_outgoing_confirmations',\n    'pending_connection',\n    'pending_bridge',\n    'pending_sleep',\n    'errored',\n    'completed',\n    'cancelled'\n);\nCREATE FUNCTION public.notifyethtxinsertion() RETURNS trigger\n    LANGUAGE plpgsql\n    AS $$\n        BEGIN\n\t\tPERFORM pg_notify('insert_on_eth_txes'::text, NOW()::text);\n\t\tRETURN NULL;\n        END\n        $$;\nCREATE FUNCTION public.notifyjobcreated() RETURNS trigger\n    LANGUAGE plpgsql\n    AS $$\n        BEGIN\n            PERFORM pg_notify('insert_on_jobs', NEW.id::text);\n            RETURN NEW;\n        END\n        $$;\nCREATE FUNCTION public.notifyjobdeleted() RETURNS trigger\n    LANGUAGE plpgsql\n    AS $$\n\tBEGIN\n\t\tPERFORM pg_notify('delete_from_jobs', OLD.id::text);\n\t\tRETURN OLD;\n\tEND\n\t$$;\nCREATE FUNCTION public.notifypipelinerunstarted() RETURNS trigger\n    LANGUAGE plpgsql\n    AS $$\n\tBEGIN\n\t\tIF NEW.finished_at IS NULL THEN\n\t\t\tPERFORM pg_notify('pipeline_run_started', NEW.id::text);\n\t\tEND IF;\n\t\tRETURN NEW;\n\tEND\n\t$$;\nSET default_tablespace = '';\nCREATE TABLE public.bridge_types (\n    name text NOT NULL,\n    url text NOT NULL,\n    confirmations bigint DEFAULT 0 NOT NULL,\n    incoming_token_hash text NOT NULL,\n    salt text NOT NULL,\n    outgoing_token text NOT NULL,\n    minimum_contract_payment character varying(255),\n    created_at timestamp with time zone NOT NULL,\n    updated_at timestamp with time zone NOT NULL\n);\nCREATE TABLE public.configurations (\n    id bigint NOT NULL,\n    name text NOT NULL,\n    value text NOT NULL,\n    created_at timestamp with time zone NOT NULL,\n    updated_at timestamp with time zone NOT NULL,\n    deleted_at timestamp with time zone\n);\nCREATE SEQUENCE public.configurations_id_seq\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\nALTER SEQUENCE public.configurations_id_seq OWNED BY public.configurations.id;\nCREATE TABLE public.direct_request_specs (\n    id integer NOT NULL,\n    contract_address bytea NOT NULL,\n    created_at timestamp with time zone NOT NULL,\n    updated_at timestamp with time zone NOT NULL,\n    on_chain_job_spec_id bytea NOT NULL,\n    CONSTRAINT direct_request_specs_on_chain_job_spec_id_check CHECK ((octet_length(on_chain_job_spec_id) = 32)),\n    CONSTRAINT eth_request_event_specs_contract_address_check CHECK ((octet_length(contract_address) = 20))\n);\nCREATE TABLE public.encrypted_ocr_key_bundles (\n    id bytea NOT NULL,\n    on_chain_signing_address bytea NOT NULL,\n    off_chain_public_key bytea NOT NULL,\n    encrypted_private_keys jsonb NOT NULL,\n    created_at timestamp with time zone NOT NULL,\n    updated_at timestamp with time zone NOT NULL,\n    config_public_key bytea NOT NULL,\n    deleted_at timestamp with time zone\n);\nCREATE TABLE public.encrypted_p2p_keys (\n    id integer NOT NULL,\n    peer_id text NOT NULL,\n    pub_key bytea NOT NULL,\n    encrypted_priv_key jsonb NOT NULL,\n    created_at timestamp with time zone NOT NULL,\n    updated_at timestamp with time zone NOT NULL,\n    deleted_at timestamp with time zone,\n    CONSTRAINT chk_pub_key_length CHECK ((octet_length(pub_key) = 32))\n);\nCREATE SEQUENCE public.encrypted_p2p_keys_id_seq\n    AS integer\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\nALTER SEQUENCE public.encrypted_p2p_keys_id_seq OWNED BY public.encrypted_p2p_keys.id;\nCREATE TABLE public.encrypted_vrf_keys (\n    public_key character varying(68) NOT NULL,\n    vrf_key text NOT NULL,\n    created_at timestamp with time zone NOT NULL,\n    updated_at timestamp with time zone NOT NULL,\n    deleted_at timestamp with time zone\n);\nCREATE TABLE public.encumbrances (\n    id bigint NOT NULL,\n    payment numeric(78,0),\n    expiration bigint,\n    end_at timestamp with time zone,\n    oracles text,\n    aggregator bytea NOT NULL,\n    agg_initiate_job_selector bytea NOT NULL,\n    agg_fulfill_selector bytea NOT NULL,\n    created_at timestamp with time zone NOT NULL,\n    updated_at timestamp with time zone NOT NULL\n);\nCREATE SEQUENCE public.encumbrances_id_seq\n    AS integer\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\nALTER SEQUENCE public.encumbrances_id_seq OWNED BY public.encumbrances.id;\nCREATE TABLE public.eth_receipts (\n    id bigint NOT NULL,\n    tx_hash bytea NOT NULL,\n    block_hash bytea NOT NULL,\n    block_number bigint NOT NULL,\n    transaction_index bigint NOT NULL,\n    receipt jsonb NOT NULL,\n    created_at timestamp with time zone NOT NULL,\n    CONSTRAINT chk_hash_length CHECK (((octet_length(tx_hash) = 32) AND (octet_length(block_hash) = 32)))\n);\nCREATE SEQUENCE public.eth_receipts_id_seq\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\nALTER SEQUENCE public.eth_receipts_id_seq OWNED BY public.eth_receipts.id;\nCREATE SEQUENCE public.eth_request_event_specs_id_seq\n    AS integer\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\nALTER SEQUENCE public.eth_request_event_specs_id_seq OWNED BY public.direct_request_specs.id;\nCREATE TABLE public.eth_task_run_txes (\n    task_run_id uuid NOT NULL,\n    eth_tx_id bigint NOT NULL\n);\nCREATE TABLE public.eth_tx_attempts (\n    id bigint NOT NULL,\n    eth_tx_id bigint NOT NULL,\n    gas_price numeric(78,0) NOT NULL,\n    signed_raw_tx bytea NOT NULL,\n    hash bytea NOT NULL,\n    broadcast_before_block_num bigint,\n    state public.eth_tx_attempts_state NOT NULL,\n    created_at timestamp with time zone NOT NULL,\n    CONSTRAINT chk_cannot_broadcast_before_block_zero CHECK (((broadcast_before_block_num IS NULL) OR (broadcast_before_block_num > 0))),\n    CONSTRAINT chk_eth_tx_attempts_fsm CHECK ((((state = ANY (ARRAY['in_progress'::public.eth_tx_attempts_state, 'insufficient_eth'::public.eth_tx_attempts_state])) AND (broadcast_before_block_num IS NULL)) OR (state = 'broadcast'::public.eth_tx_attempts_state))),\n    CONSTRAINT chk_hash_length CHECK ((octet_length(hash) = 32)),\n    CONSTRAINT chk_signed_raw_tx_present CHECK ((octet_length(signed_raw_tx) > 0))\n);\nCREATE SEQUENCE public.eth_tx_attempts_id_seq\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\nALTER SEQUENCE public.eth_tx_attempts_id_seq OWNED BY public.eth_tx_attempts.id;\nCREATE TABLE public.eth_txes (\n    id bigint NOT NULL,\n    nonce bigint,\n    from_address bytea NOT NULL,\n    to_address bytea NOT NULL,\n    encoded_payload bytea NOT NULL,\n    value numeric(78,0) NOT NULL,\n    gas_limit bigint NOT NULL,\n    error text,\n    broadcast_at timestamp with time zone,\n    created_at timestamp with time zone NOT NULL,\n    state public.eth_txes_state DEFAULT 'unstarted'::public.eth_txes_state NOT NULL,\n    CONSTRAINT chk_broadcast_at_is_sane CHECK ((broadcast_at > '2019-01-01 00:00:00+00'::timestamp with time zone)),\n    CONSTRAINT chk_error_cannot_be_empty CHECK (((error IS NULL) OR (length(error) > 0))),\n    CONSTRAINT chk_eth_txes_fsm CHECK ((((state = 'unstarted'::public.eth_txes_state) AND (nonce IS NULL) AND (error IS NULL) AND (broadcast_at IS NULL)) OR ((state = 'in_progress'::public.eth_txes_state) AND (nonce IS NOT NULL) AND (error IS NULL) AND (broadcast_at IS NULL)) OR ((state = 'fatal_error'::public.eth_txes_state) AND (nonce IS NULL) AND (error IS NOT NULL) AND (broadcast_at IS NULL)) OR ((state = 'unconfirmed'::public.eth_txes_state) AND (nonce IS NOT NULL) AND (error IS NULL) AND (broadcast_at IS NOT NULL)) OR ((state = 'confirmed'::public.eth_txes_state) AND (nonce IS NOT NULL) AND (error IS NULL) AND (broadcast_at IS NOT NULL)) OR ((state = 'confirmed_missing_receipt'::public.eth_txes_state) AND (nonce IS NOT NULL) AND (error IS NULL) AND (broadcast_at IS NOT NULL)))),\n    CONSTRAINT chk_from_address_length CHECK ((octet_length(from_address) = 20)),\n    CONSTRAINT chk_to_address_length CHECK ((octet_length(to_address) = 20))\n);\nCREATE SEQUENCE public.eth_txes_id_seq\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\nALTER SEQUENCE public.eth_txes_id_seq OWNED BY public.eth_txes.id;\nCREATE TABLE public.external_initiators (\n    id bigint NOT NULL,\n    created_at timestamp with time zone NOT NULL,\n    updated_at timestamp with time zone NOT NULL,\n    deleted_at timestamp with time zone,\n    name text NOT NULL,\n    url text,\n    access_key text NOT NULL,\n    salt text NOT NULL,\n    hashed_secret text NOT NULL,\n    outgoing_secret text NOT NULL,\n    outgoing_token text NOT NULL\n);\nCREATE SEQUENCE public.external_initiators_id_seq\n    AS integer\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\nALTER SEQUENCE public.external_initiators_id_seq OWNED BY public.external_initiators.id;\nCREATE TABLE public.flux_monitor_round_stats (\n    id bigint NOT NULL,\n    aggregator bytea NOT NULL,\n    round_id integer NOT NULL,\n    num_new_round_logs integer DEFAULT 0 NOT NULL,\n    num_submissions integer DEFAULT 0 NOT NULL,\n    job_run_id uuid\n);\nCREATE SEQUENCE public.flux_monitor_round_stats_id_seq\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\nALTER SEQUENCE public.flux_monitor_round_stats_id_seq OWNED BY public.flux_monitor_round_stats.id;\nCREATE TABLE public.flux_monitor_specs (\n    id integer NOT NULL,\n    contract_address bytea NOT NULL,\n    \"precision\" integer,\n    threshold real,\n    absolute_threshold real,\n    poll_timer_period bigint,\n    poll_timer_disabled boolean,\n    idle_timer_period bigint,\n    idle_timer_disabled boolean,\n    created_at timestamp with time zone NOT NULL,\n    updated_at timestamp with time zone NOT NULL,\n    CONSTRAINT flux_monitor_specs_check CHECK ((poll_timer_disabled OR (poll_timer_period > 0))),\n    CONSTRAINT flux_monitor_specs_check1 CHECK ((idle_timer_disabled OR (idle_timer_period > 0))),\n    CONSTRAINT flux_monitor_specs_contract_address_check CHECK ((octet_length(contract_address) = 20))\n);\nCREATE SEQUENCE public.flux_monitor_specs_id_seq\n    AS integer\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\nALTER SEQUENCE public.flux_monitor_specs_id_seq OWNED BY public.flux_monitor_specs.id;\nCREATE TABLE public.heads (\n    id bigint NOT NULL,\n    hash bytea NOT NULL,\n    number bigint NOT NULL,\n    parent_hash bytea NOT NULL,\n    created_at timestamp with time zone NOT NULL,\n    \"timestamp\" timestamp with time zone NOT NULL,\n    CONSTRAINT chk_hash_size CHECK ((octet_length(hash) = 32)),\n    CONSTRAINT chk_parent_hash_size CHECK ((octet_length(parent_hash) = 32))\n);\nCREATE SEQUENCE public.heads_id_seq\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\nALTER SEQUENCE public.heads_id_seq OWNED BY public.heads.id;\nCREATE TABLE public.initiators (\n    id bigint NOT NULL,\n    job_spec_id uuid NOT NULL,\n    type text NOT NULL,\n    created_at timestamp with time zone NOT NULL,\n    deleted_at timestamp with time zone,\n    schedule text,\n    \"time\" timestamp with time zone,\n    ran boolean,\n    address bytea,\n    requesters text,\n    name character varying(255),\n    params jsonb,\n    from_block numeric(78,0),\n    to_block numeric(78,0),\n    topics jsonb,\n    request_data text,\n    feeds text,\n    threshold double precision,\n    \"precision\" smallint,\n    polling_interval bigint,\n    absolute_threshold double precision,\n    updated_at timestamp with time zone NOT NULL,\n    poll_timer jsonb,\n    idle_timer jsonb\n);\nCREATE SEQUENCE public.initiators_id_seq\n    AS integer\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\nALTER SEQUENCE public.initiators_id_seq OWNED BY public.initiators.id;\nCREATE TABLE public.job_runs (\n    result_id bigint,\n    run_request_id bigint,\n    status public.run_status DEFAULT 'unstarted'::public.run_status NOT NULL,\n    created_at timestamp with time zone NOT NULL,\n    finished_at timestamp with time zone,\n    updated_at timestamp with time zone NOT NULL,\n    initiator_id bigint NOT NULL,\n    deleted_at timestamp with time zone,\n    creation_height numeric(78,0),\n    observed_height numeric(78,0),\n    payment numeric(78,0),\n    job_spec_id uuid NOT NULL,\n    id uuid NOT NULL\n);\nCREATE TABLE public.job_spec_errors (\n    id bigint NOT NULL,\n    job_spec_id uuid NOT NULL,\n    description text NOT NULL,\n    occurrences integer DEFAULT 1 NOT NULL,\n    created_at timestamp with time zone NOT NULL,\n    updated_at timestamp with time zone NOT NULL\n);\nCREATE SEQUENCE public.job_spec_errors_id_seq\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\nALTER SEQUENCE public.job_spec_errors_id_seq OWNED BY public.job_spec_errors.id;\nCREATE TABLE public.job_spec_errors_v2 (\n    id bigint NOT NULL,\n    job_id integer,\n    description text NOT NULL,\n    occurrences integer DEFAULT 1 NOT NULL,\n    created_at timestamp with time zone NOT NULL,\n    updated_at timestamp with time zone NOT NULL\n);\nCREATE SEQUENCE public.job_spec_errors_v2_id_seq\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\nALTER SEQUENCE public.job_spec_errors_v2_id_seq OWNED BY public.job_spec_errors_v2.id;\nCREATE TABLE public.job_specs (\n    created_at timestamp with time zone NOT NULL,\n    start_at timestamp with time zone,\n    end_at timestamp with time zone,\n    deleted_at timestamp with time zone,\n    min_payment character varying(255),\n    id uuid NOT NULL,\n    updated_at timestamp with time zone NOT NULL,\n    name character varying(255)\n);\nCREATE TABLE public.jobs (\n    id integer NOT NULL,\n    pipeline_spec_id integer,\n    offchainreporting_oracle_spec_id integer,\n    name character varying(255),\n    schema_version integer NOT NULL,\n    type character varying(255) NOT NULL,\n    max_task_duration bigint,\n    direct_request_spec_id integer,\n    flux_monitor_spec_id integer,\n    CONSTRAINT chk_only_one_spec CHECK ((num_nonnulls(offchainreporting_oracle_spec_id, direct_request_spec_id, flux_monitor_spec_id) = 1)),\n    CONSTRAINT chk_schema_version CHECK ((schema_version > 0)),\n    CONSTRAINT chk_type CHECK (((type)::text <> ''::text))\n);\nCREATE SEQUENCE public.jobs_id_seq\n    AS integer\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\nALTER SEQUENCE public.jobs_id_seq OWNED BY public.jobs.id;\nCREATE TABLE public.keys (\n    address bytea NOT NULL,\n    json jsonb NOT NULL,\n    created_at timestamp with time zone NOT NULL,\n    updated_at timestamp with time zone NOT NULL,\n    next_nonce bigint,\n    id integer NOT NULL,\n    last_used timestamp with time zone,\n    is_funding boolean DEFAULT false NOT NULL,\n    deleted_at timestamp with time zone,\n    CONSTRAINT chk_address_length CHECK ((octet_length(address) = 20))\n);\nCREATE SEQUENCE public.keys_id_seq\n    AS integer\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\nALTER SEQUENCE public.keys_id_seq OWNED BY public.keys.id;\nCREATE TABLE public.log_consumptions (\n    id bigint NOT NULL,\n    block_hash bytea NOT NULL,\n    log_index bigint NOT NULL,\n    job_id uuid,\n    created_at timestamp without time zone NOT NULL,\n    block_number bigint,\n    job_id_v2 integer,\n    CONSTRAINT chk_log_consumptions_exactly_one_job_id CHECK ((((job_id IS NOT NULL) AND (job_id_v2 IS NULL)) OR ((job_id_v2 IS NOT NULL) AND (job_id IS NULL))))\n);\nCREATE SEQUENCE public.log_consumptions_id_seq\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\nALTER SEQUENCE public.log_consumptions_id_seq OWNED BY public.log_consumptions.id;\nCREATE TABLE public.offchainreporting_contract_configs (\n    offchainreporting_oracle_spec_id integer NOT NULL,\n    config_digest bytea NOT NULL,\n    signers bytea[],\n    transmitters bytea[],\n    threshold integer,\n    encoded_config_version bigint,\n    encoded bytea,\n    created_at timestamp with time zone NOT NULL,\n    updated_at timestamp with time zone NOT NULL,\n    CONSTRAINT offchainreporting_contract_configs_config_digest_check CHECK ((octet_length(config_digest) = 16))\n);\nCREATE TABLE public.offchainreporting_oracle_specs (\n    id integer NOT NULL,\n    contract_address bytea NOT NULL,\n    p2p_peer_id text,\n    p2p_bootstrap_peers text[],\n    is_bootstrap_peer boolean NOT NULL,\n    encrypted_ocr_key_bundle_id bytea,\n    monitoring_endpoint text,\n    transmitter_address bytea,\n    observation_timeout bigint,\n    blockchain_timeout bigint,\n    contract_config_tracker_subscribe_interval bigint,\n    contract_config_tracker_poll_interval bigint,\n    contract_config_confirmations integer,\n    created_at timestamp with time zone NOT NULL,\n    updated_at timestamp with time zone NOT NULL,\n    CONSTRAINT chk_contract_address_length CHECK ((octet_length(contract_address) = 20))\n);\nCREATE SEQUENCE public.offchainreporting_oracle_specs_id_seq\n    AS integer\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\nALTER SEQUENCE public.offchainreporting_oracle_specs_id_seq OWNED BY public.offchainreporting_oracle_specs.id;\nCREATE TABLE public.offchainreporting_pending_transmissions (\n    offchainreporting_oracle_spec_id integer NOT NULL,\n    config_digest bytea NOT NULL,\n    epoch bigint NOT NULL,\n    round bigint NOT NULL,\n    \"time\" timestamp with time zone NOT NULL,\n    median numeric(78,0) NOT NULL,\n    serialized_report bytea NOT NULL,\n    rs bytea[] NOT NULL,\n    ss bytea[] NOT NULL,\n    vs bytea NOT NULL,\n    created_at timestamp with time zone NOT NULL,\n    updated_at timestamp with time zone NOT NULL,\n    CONSTRAINT offchainreporting_pending_transmissions_config_digest_check CHECK ((octet_length(config_digest) = 16))\n);\nCREATE TABLE public.offchainreporting_persistent_states (\n    offchainreporting_oracle_spec_id integer NOT NULL,\n    config_digest bytea NOT NULL,\n    epoch bigint NOT NULL,\n    highest_sent_epoch bigint NOT NULL,\n    highest_received_epoch bigint[] NOT NULL,\n    created_at timestamp with time zone NOT NULL,\n    updated_at timestamp with time zone NOT NULL,\n    CONSTRAINT offchainreporting_persistent_states_config_digest_check CHECK ((octet_length(config_digest) = 16))\n);\nCREATE TABLE public.p2p_peers (\n    id text NOT NULL,\n    addr text NOT NULL,\n    created_at timestamp with time zone NOT NULL,\n    updated_at timestamp with time zone NOT NULL,\n    peer_id text NOT NULL\n);\nCREATE TABLE public.pipeline_runs (\n    id bigint NOT NULL,\n    pipeline_spec_id integer NOT NULL,\n    meta jsonb DEFAULT '{}'::jsonb NOT NULL,\n    created_at timestamp with time zone NOT NULL,\n    finished_at timestamp with time zone,\n    errors jsonb,\n    outputs jsonb,\n    CONSTRAINT pipeline_runs_check CHECK ((((outputs IS NULL) AND (errors IS NULL) AND (finished_at IS NULL)) OR ((outputs IS NOT NULL) AND (errors IS NOT NULL) AND (finished_at IS NOT NULL))))\n);\nCREATE SEQUENCE public.pipeline_runs_id_seq\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\nALTER SEQUENCE public.pipeline_runs_id_seq OWNED BY public.pipeline_runs.id;\nCREATE TABLE public.pipeline_specs (\n    id integer NOT NULL,\n    dot_dag_source text NOT NULL,\n    created_at timestamp with time zone NOT NULL,\n    max_task_duration bigint\n);\nCREATE SEQUENCE public.pipeline_specs_id_seq\n    AS integer\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\nALTER SEQUENCE public.pipeline_specs_id_seq OWNED BY public.pipeline_specs.id;\nCREATE TABLE public.pipeline_task_runs (\n    id bigint NOT NULL,\n    pipeline_run_id bigint NOT NULL,\n    type text NOT NULL,\n    index integer DEFAULT 0 NOT NULL,\n    output jsonb,\n    error text,\n    pipeline_task_spec_id integer NOT NULL,\n    created_at timestamp with time zone NOT NULL,\n    finished_at timestamp with time zone,\n    CONSTRAINT chk_pipeline_task_run_fsm CHECK ((((type <> 'result'::text) AND (((finished_at IS NULL) AND (error IS NULL) AND (output IS NULL)) OR ((finished_at IS NOT NULL) AND (NOT ((error IS NOT NULL) AND (output IS NOT NULL)))))) OR ((type = 'result'::text) AND (((output IS NULL) AND (error IS NULL) AND (finished_at IS NULL)) OR ((output IS NOT NULL) AND (error IS NOT NULL) AND (finished_at IS NOT NULL))))))\n);\nCREATE SEQUENCE public.pipeline_task_runs_id_seq\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\nALTER SEQUENCE public.pipeline_task_runs_id_seq OWNED BY public.pipeline_task_runs.id;\nCREATE TABLE public.pipeline_task_specs (\n    id integer NOT NULL,\n    dot_id text NOT NULL,\n    pipeline_spec_id integer NOT NULL,\n    type text NOT NULL,\n    json jsonb NOT NULL,\n    index integer DEFAULT 0 NOT NULL,\n    successor_id integer,\n    created_at timestamp with time zone NOT NULL\n);\nCOMMENT ON COLUMN public.pipeline_task_specs.dot_id IS 'Dot ID is included to help in debugging';\nCREATE SEQUENCE public.pipeline_task_specs_id_seq\n    AS integer\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\nALTER SEQUENCE public.pipeline_task_specs_id_seq OWNED BY public.pipeline_task_specs.id;\nCREATE TABLE public.run_requests (\n    id bigint NOT NULL,\n    request_id bytea,\n    tx_hash bytea,\n    requester bytea,\n    created_at timestamp with time zone NOT NULL,\n    block_hash bytea,\n    payment numeric(78,0),\n    request_params jsonb DEFAULT '{}'::jsonb NOT NULL\n);\nCREATE SEQUENCE public.run_requests_id_seq\n    AS integer\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\nALTER SEQUENCE public.run_requests_id_seq OWNED BY public.run_requests.id;\nCREATE TABLE public.run_results (\n    id bigint NOT NULL,\n    data jsonb,\n    error_message text,\n    created_at timestamp with time zone NOT NULL,\n    updated_at timestamp with time zone NOT NULL\n);\nCREATE SEQUENCE public.run_results_id_seq\n    AS integer\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\nALTER SEQUENCE public.run_results_id_seq OWNED BY public.run_results.id;\nCREATE TABLE public.service_agreements (\n    id text NOT NULL,\n    created_at timestamp with time zone NOT NULL,\n    encumbrance_id bigint,\n    request_body text,\n    signature character varying(255),\n    job_spec_id uuid,\n    updated_at timestamp with time zone NOT NULL\n);\nCREATE TABLE public.sessions (\n    id text NOT NULL,\n    last_used timestamp with time zone,\n    created_at timestamp with time zone NOT NULL\n);\nCREATE TABLE public.sync_events (\n    id bigint NOT NULL,\n    created_at timestamp with time zone NOT NULL,\n    updated_at timestamp with time zone NOT NULL,\n    body text NOT NULL\n);\nCREATE SEQUENCE public.sync_events_id_seq\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\nALTER SEQUENCE public.sync_events_id_seq OWNED BY public.sync_events.id;\nCREATE TABLE public.task_runs (\n    result_id bigint,\n    status public.run_status DEFAULT 'unstarted'::public.run_status NOT NULL,\n    task_spec_id bigint NOT NULL,\n    minimum_confirmations bigint,\n    created_at timestamp with time zone NOT NULL,\n    confirmations bigint,\n    job_run_id uuid NOT NULL,\n    id uuid NOT NULL,\n    updated_at timestamp with time zone NOT NULL\n);\nCREATE TABLE public.task_specs (\n    id bigint NOT NULL,\n    created_at timestamp with time zone NOT NULL,\n    updated_at timestamp with time zone NOT NULL,\n    deleted_at timestamp with time zone,\n    type text NOT NULL,\n    confirmations bigint,\n    params jsonb,\n    job_spec_id uuid NOT NULL\n);\nCREATE SEQUENCE public.task_specs_id_seq\n    AS integer\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\nALTER SEQUENCE public.task_specs_id_seq OWNED BY public.task_specs.id;\nCREATE TABLE public.users (\n    email text NOT NULL,\n    hashed_password text,\n    created_at timestamp with time zone NOT NULL,\n    token_key text,\n    token_salt text,\n    token_hashed_secret text,\n    updated_at timestamp with time zone NOT NULL,\n    token_secret text\n);\nALTER TABLE ONLY public.configurations ALTER COLUMN id SET DEFAULT nextval('public.configurations_id_seq'::regclass);\nALTER TABLE ONLY public.direct_request_specs ALTER COLUMN id SET DEFAULT nextval('public.eth_request_event_specs_id_seq'::regclass);\nALTER TABLE ONLY public.encrypted_p2p_keys ALTER COLUMN id SET DEFAULT nextval('public.encrypted_p2p_keys_id_seq'::regclass);\nALTER TABLE ONLY public.encumbrances ALTER COLUMN id SET DEFAULT nextval('public.encumbrances_id_seq'::regclass);\nALTER TABLE ONLY public.eth_receipts ALTER COLUMN id SET DEFAULT nextval('public.eth_receipts_id_seq'::regclass);\nALTER TABLE ONLY public.eth_tx_attempts ALTER COLUMN id SET DEFAULT nextval('public.eth_tx_attempts_id_seq'::regclass);\nALTER TABLE ONLY public.eth_txes ALTER COLUMN id SET DEFAULT nextval('public.eth_txes_id_seq'::regclass);\nALTER TABLE ONLY public.external_initiators ALTER COLUMN id SET DEFAULT nextval('public.external_initiators_id_seq'::regclass);\nALTER TABLE ONLY public.flux_monitor_round_stats ALTER COLUMN id SET DEFAULT nextval('public.flux_monitor_round_stats_id_seq'::regclass);\nALTER TABLE ONLY public.flux_monitor_specs ALTER COLUMN id SET DEFAULT nextval('public.flux_monitor_specs_id_seq'::regclass);\nALTER TABLE ONLY public.heads ALTER COLUMN id SET DEFAULT nextval('public.heads_id_seq'::regclass);\nALTER TABLE ONLY public.initiators ALTER COLUMN id SET DEFAULT nextval('public.initiators_id_seq'::regclass);\nALTER TABLE ONLY public.job_spec_errors ALTER COLUMN id SET DEFAULT nextval('public.job_spec_errors_id_seq'::regclass);\nALTER TABLE ONLY public.job_spec_errors_v2 ALTER COLUMN id SET DEFAULT nextval('public.job_spec_errors_v2_id_seq'::regclass);\nALTER TABLE ONLY public.jobs ALTER COLUMN id SET DEFAULT nextval('public.jobs_id_seq'::regclass);\nALTER TABLE ONLY public.keys ALTER COLUMN id SET DEFAULT nextval('public.keys_id_seq'::regclass);\nALTER TABLE ONLY public.log_consumptions ALTER COLUMN id SET DEFAULT nextval('public.log_consumptions_id_seq'::regclass);\nALTER TABLE ONLY public.offchainreporting_oracle_specs ALTER COLUMN id SET DEFAULT nextval('public.offchainreporting_oracle_specs_id_seq'::regclass);\nALTER TABLE ONLY public.pipeline_runs ALTER COLUMN id SET DEFAULT nextval('public.pipeline_runs_id_seq'::regclass);\nALTER TABLE ONLY public.pipeline_specs ALTER COLUMN id SET DEFAULT nextval('public.pipeline_specs_id_seq'::regclass);\nALTER TABLE ONLY public.pipeline_task_runs ALTER COLUMN id SET DEFAULT nextval('public.pipeline_task_runs_id_seq'::regclass);\nALTER TABLE ONLY public.pipeline_task_specs ALTER COLUMN id SET DEFAULT nextval('public.pipeline_task_specs_id_seq'::regclass);\nALTER TABLE ONLY public.run_requests ALTER COLUMN id SET DEFAULT nextval('public.run_requests_id_seq'::regclass);\nALTER TABLE ONLY public.run_results ALTER COLUMN id SET DEFAULT nextval('public.run_results_id_seq'::regclass);\nALTER TABLE ONLY public.sync_events ALTER COLUMN id SET DEFAULT nextval('public.sync_events_id_seq'::regclass);\nALTER TABLE ONLY public.task_specs ALTER COLUMN id SET DEFAULT nextval('public.task_specs_id_seq'::regclass);\nALTER TABLE ONLY public.bridge_types\n    ADD CONSTRAINT bridge_types_pkey PRIMARY KEY (name);\nALTER TABLE ONLY public.configurations\n    ADD CONSTRAINT configurations_name_key UNIQUE (name);\nALTER TABLE ONLY public.configurations\n    ADD CONSTRAINT configurations_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.direct_request_specs\n    ADD CONSTRAINT direct_request_specs_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.encrypted_ocr_key_bundles\n    ADD CONSTRAINT encrypted_ocr_key_bundles_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.encrypted_p2p_keys\n    ADD CONSTRAINT encrypted_p2p_keys_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.encrypted_vrf_keys\n    ADD CONSTRAINT encrypted_secret_keys_pkey PRIMARY KEY (public_key);\nALTER TABLE ONLY public.encumbrances\n    ADD CONSTRAINT encumbrances_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.eth_receipts\n    ADD CONSTRAINT eth_receipts_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.eth_tx_attempts\n    ADD CONSTRAINT eth_tx_attempts_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.eth_txes\n    ADD CONSTRAINT eth_txes_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.external_initiators\n    ADD CONSTRAINT external_initiators_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.flux_monitor_round_stats\n    ADD CONSTRAINT flux_monitor_round_stats_aggregator_round_id_key UNIQUE (aggregator, round_id);\nALTER TABLE ONLY public.flux_monitor_round_stats\n    ADD CONSTRAINT flux_monitor_round_stats_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.flux_monitor_specs\n    ADD CONSTRAINT flux_monitor_specs_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.heads\n    ADD CONSTRAINT heads_pkey1 PRIMARY KEY (id);\nALTER TABLE ONLY public.initiators\n    ADD CONSTRAINT initiators_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.job_runs\n    ADD CONSTRAINT job_run_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.job_spec_errors\n    ADD CONSTRAINT job_spec_errors_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.job_spec_errors_v2\n    ADD CONSTRAINT job_spec_errors_v2_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.job_specs\n    ADD CONSTRAINT job_spec_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.jobs\n    ADD CONSTRAINT jobs_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.keys\n    ADD CONSTRAINT keys_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.log_consumptions\n    ADD CONSTRAINT log_consumptions_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.offchainreporting_contract_configs\n    ADD CONSTRAINT offchainreporting_contract_configs_pkey PRIMARY KEY (offchainreporting_oracle_spec_id);\nALTER TABLE ONLY public.offchainreporting_oracle_specs\n    ADD CONSTRAINT offchainreporting_oracle_specs_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.offchainreporting_pending_transmissions\n    ADD CONSTRAINT offchainreporting_pending_transmissions_pkey PRIMARY KEY (offchainreporting_oracle_spec_id, config_digest, epoch, round);\nALTER TABLE ONLY public.offchainreporting_persistent_states\n    ADD CONSTRAINT offchainreporting_persistent_states_pkey PRIMARY KEY (offchainreporting_oracle_spec_id, config_digest);\nALTER TABLE ONLY public.pipeline_runs\n    ADD CONSTRAINT pipeline_runs_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.pipeline_specs\n    ADD CONSTRAINT pipeline_specs_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.pipeline_task_runs\n    ADD CONSTRAINT pipeline_task_runs_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.pipeline_task_specs\n    ADD CONSTRAINT pipeline_task_specs_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.run_requests\n    ADD CONSTRAINT run_requests_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.run_results\n    ADD CONSTRAINT run_results_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.service_agreements\n    ADD CONSTRAINT service_agreements_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.sessions\n    ADD CONSTRAINT sessions_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.sync_events\n    ADD CONSTRAINT sync_events_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.task_runs\n    ADD CONSTRAINT task_run_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.task_specs\n    ADD CONSTRAINT task_specs_pkey PRIMARY KEY (id);\nALTER TABLE ONLY public.offchainreporting_oracle_specs\n    ADD CONSTRAINT unique_contract_addr UNIQUE (contract_address);\nALTER TABLE ONLY public.users\n    ADD CONSTRAINT users_pkey PRIMARY KEY (email);\nCREATE UNIQUE INDEX external_initiators_name_key ON public.external_initiators USING btree (lower(name));\nCREATE INDEX idx_bridge_types_created_at ON public.bridge_types USING brin (created_at);\nCREATE INDEX idx_bridge_types_updated_at ON public.bridge_types USING brin (updated_at);\nCREATE INDEX idx_configurations_name ON public.configurations USING btree (name);\nCREATE UNIQUE INDEX idx_direct_request_specs_unique_job_spec_id ON public.direct_request_specs USING btree (on_chain_job_spec_id);\nCREATE INDEX idx_encumbrances_created_at ON public.encumbrances USING brin (created_at);\nCREATE INDEX idx_encumbrances_updated_at ON public.encumbrances USING brin (updated_at);\nCREATE INDEX idx_eth_receipts_block_number ON public.eth_receipts USING btree (block_number);\nCREATE INDEX idx_eth_receipts_created_at ON public.eth_receipts USING brin (created_at);\nCREATE UNIQUE INDEX idx_eth_receipts_unique ON public.eth_receipts USING btree (tx_hash, block_hash);\nCREATE UNIQUE INDEX idx_eth_task_run_txes_eth_tx_id ON public.eth_task_run_txes USING btree (eth_tx_id);\nCREATE UNIQUE INDEX idx_eth_task_run_txes_task_run_id ON public.eth_task_run_txes USING btree (task_run_id);\nCREATE INDEX idx_eth_tx_attempts_broadcast_before_block_num ON public.eth_tx_attempts USING btree (broadcast_before_block_num);\nCREATE INDEX idx_eth_tx_attempts_created_at ON public.eth_tx_attempts USING brin (created_at);\nCREATE UNIQUE INDEX idx_eth_tx_attempts_hash ON public.eth_tx_attempts USING btree (hash);\nCREATE INDEX idx_eth_tx_attempts_in_progress ON public.eth_tx_attempts USING btree (state) WHERE (state = 'in_progress'::public.eth_tx_attempts_state);\nCREATE UNIQUE INDEX idx_eth_tx_attempts_unique_gas_prices ON public.eth_tx_attempts USING btree (eth_tx_id, gas_price);\nCREATE INDEX idx_eth_txes_broadcast_at ON public.eth_txes USING brin (broadcast_at);\nCREATE INDEX idx_eth_txes_created_at ON public.eth_txes USING brin (created_at);\nCREATE INDEX idx_eth_txes_min_unconfirmed_nonce_for_key ON public.eth_txes USING btree (nonce, from_address) WHERE (state = 'unconfirmed'::public.eth_txes_state);\nCREATE UNIQUE INDEX idx_eth_txes_nonce_from_address ON public.eth_txes USING btree (nonce, from_address);\nCREATE INDEX idx_eth_txes_state ON public.eth_txes USING btree (state) WHERE (state <> 'confirmed'::public.eth_txes_state);\nCREATE INDEX idx_external_initiators_deleted_at ON public.external_initiators USING btree (deleted_at);\nCREATE UNIQUE INDEX idx_heads_hash ON public.heads USING btree (hash);\nCREATE INDEX idx_heads_number ON public.heads USING btree (number);\nCREATE INDEX idx_initiators_address ON public.initiators USING btree (address);\nCREATE INDEX idx_initiators_created_at ON public.initiators USING btree (created_at);\nCREATE INDEX idx_initiators_deleted_at ON public.initiators USING btree (deleted_at);\nCREATE INDEX idx_initiators_job_spec_id ON public.initiators USING btree (job_spec_id);\nCREATE INDEX idx_initiators_type ON public.initiators USING btree (type);\nCREATE INDEX idx_initiators_updated_at ON public.initiators USING brin (updated_at);\nCREATE INDEX idx_job_runs_created_at ON public.job_runs USING brin (created_at);\nCREATE INDEX idx_job_runs_deleted_at ON public.job_runs USING btree (deleted_at);\nCREATE INDEX idx_job_runs_finished_at ON public.job_runs USING brin (finished_at);\nCREATE INDEX idx_job_runs_initiator_id ON public.job_runs USING btree (initiator_id);\nCREATE INDEX idx_job_runs_job_spec_id ON public.job_runs USING btree (job_spec_id);\nCREATE INDEX idx_job_runs_result_id ON public.job_runs USING btree (result_id);\nCREATE INDEX idx_job_runs_run_request_id ON public.job_runs USING btree (run_request_id);\nCREATE INDEX idx_job_runs_status ON public.job_runs USING btree (status) WHERE (status <> 'completed'::public.run_status);\nCREATE INDEX idx_job_runs_updated_at ON public.job_runs USING brin (updated_at);\nCREATE INDEX idx_job_spec_errors_v2_created_at ON public.job_spec_errors_v2 USING brin (created_at);\nCREATE INDEX idx_job_spec_errors_v2_finished_at ON public.job_spec_errors_v2 USING brin (updated_at);\nCREATE INDEX idx_job_specs_created_at ON public.job_specs USING btree (created_at);\nCREATE INDEX idx_job_specs_deleted_at ON public.job_specs USING btree (deleted_at);\nCREATE INDEX idx_job_specs_end_at ON public.job_specs USING btree (end_at);\nCREATE INDEX idx_job_specs_start_at ON public.job_specs USING btree (start_at);\nCREATE INDEX idx_job_specs_updated_at ON public.job_specs USING brin (updated_at);\nCREATE UNIQUE INDEX idx_jobs_unique_direct_request_spec_id ON public.jobs USING btree (direct_request_spec_id);\nCREATE UNIQUE INDEX idx_jobs_unique_offchain_reporting_oracle_spec_id ON public.jobs USING btree (offchainreporting_oracle_spec_id);\nCREATE UNIQUE INDEX idx_jobs_unique_pipeline_spec_id ON public.jobs USING btree (pipeline_spec_id);\nCREATE UNIQUE INDEX idx_keys_only_one_funding ON public.keys USING btree (is_funding) WHERE (is_funding = true);\nCREATE INDEX idx_offchainreporting_oracle_specs_created_at ON public.offchainreporting_oracle_specs USING brin (created_at);\nCREATE INDEX idx_offchainreporting_oracle_specs_updated_at ON public.offchainreporting_oracle_specs USING brin (updated_at);\nCREATE INDEX idx_offchainreporting_pending_transmissions_time ON public.offchainreporting_pending_transmissions USING btree (\"time\");\nCREATE UNIQUE INDEX idx_only_one_in_progress_attempt_per_eth_tx ON public.eth_tx_attempts USING btree (eth_tx_id) WHERE (state = 'in_progress'::public.eth_tx_attempts_state);\nCREATE UNIQUE INDEX idx_only_one_in_progress_tx_per_account ON public.eth_txes USING btree (from_address) WHERE (state = 'in_progress'::public.eth_txes_state);\nCREATE INDEX idx_pipeline_runs_created_at ON public.pipeline_runs USING brin (created_at);\nCREATE INDEX idx_pipeline_runs_finished_at ON public.pipeline_runs USING brin (finished_at);\nCREATE INDEX idx_pipeline_runs_pipeline_spec_id ON public.pipeline_runs USING btree (pipeline_spec_id);\nCREATE INDEX idx_pipeline_runs_unfinished_runs ON public.pipeline_runs USING btree (id) WHERE (finished_at IS NULL);\nCREATE INDEX idx_pipeline_specs_created_at ON public.pipeline_specs USING brin (created_at);\nCREATE INDEX idx_pipeline_task_runs_created_at ON public.pipeline_task_runs USING brin (created_at);\nCREATE INDEX idx_pipeline_task_runs_finished_at ON public.pipeline_task_runs USING brin (finished_at);\nCREATE INDEX idx_pipeline_task_runs_optimise_find_results ON public.pipeline_task_runs USING btree (pipeline_run_id);\nCREATE INDEX idx_pipeline_task_specs_created_at ON public.pipeline_task_specs USING brin (created_at);\nCREATE INDEX idx_pipeline_task_specs_pipeline_spec_id ON public.pipeline_task_specs USING btree (pipeline_spec_id);\nCREATE UNIQUE INDEX idx_pipeline_task_specs_single_output ON public.pipeline_task_specs USING btree (pipeline_spec_id) WHERE (successor_id IS NULL);\nCREATE INDEX idx_pipeline_task_specs_successor_id ON public.pipeline_task_specs USING btree (successor_id);\nCREATE INDEX idx_run_requests_created_at ON public.run_requests USING brin (created_at);\nCREATE INDEX idx_run_results_created_at ON public.run_results USING brin (created_at);\nCREATE INDEX idx_run_results_updated_at ON public.run_results USING brin (updated_at);\nCREATE INDEX idx_service_agreements_created_at ON public.service_agreements USING btree (created_at);\nCREATE INDEX idx_service_agreements_updated_at ON public.service_agreements USING brin (updated_at);\nCREATE INDEX idx_sessions_created_at ON public.sessions USING brin (created_at);\nCREATE INDEX idx_sessions_last_used ON public.sessions USING brin (last_used);\nCREATE INDEX idx_task_runs_created_at ON public.task_runs USING brin (created_at);\nCREATE INDEX idx_task_runs_job_run_id ON public.task_runs USING btree (job_run_id);\nCREATE INDEX idx_task_runs_result_id ON public.task_runs USING btree (result_id);\nCREATE INDEX idx_task_runs_status ON public.task_runs USING btree (status) WHERE (status <> 'completed'::public.run_status);\nCREATE INDEX idx_task_runs_task_spec_id ON public.task_runs USING btree (task_spec_id);\nCREATE INDEX idx_task_runs_updated_at ON public.task_runs USING brin (updated_at);\nCREATE INDEX idx_task_specs_created_at ON public.task_specs USING brin (created_at);\nCREATE INDEX idx_task_specs_deleted_at ON public.task_specs USING btree (deleted_at);\nCREATE INDEX idx_task_specs_job_spec_id ON public.task_specs USING btree (job_spec_id);\nCREATE INDEX idx_task_specs_type ON public.task_specs USING btree (type);\nCREATE INDEX idx_task_specs_updated_at ON public.task_specs USING brin (updated_at);\nCREATE UNIQUE INDEX idx_unique_keys_address ON public.keys USING btree (address);\nCREATE UNIQUE INDEX idx_unique_peer_ids ON public.encrypted_p2p_keys USING btree (peer_id);\nCREATE UNIQUE INDEX idx_unique_pub_keys ON public.encrypted_p2p_keys USING btree (pub_key);\nCREATE INDEX idx_users_created_at ON public.users USING btree (created_at);\nCREATE INDEX idx_users_updated_at ON public.users USING brin (updated_at);\nCREATE INDEX job_spec_errors_created_at_idx ON public.job_spec_errors USING brin (created_at);\nCREATE INDEX job_spec_errors_occurrences_idx ON public.job_spec_errors USING btree (occurrences);\nCREATE UNIQUE INDEX job_spec_errors_unique_idx ON public.job_spec_errors USING btree (job_spec_id, description);\nCREATE INDEX job_spec_errors_updated_at_idx ON public.job_spec_errors USING brin (updated_at);\nCREATE UNIQUE INDEX job_spec_errors_v2_unique_idx ON public.job_spec_errors_v2 USING btree (job_id, description);\nCREATE INDEX log_consumptions_created_at_idx ON public.log_consumptions USING brin (created_at);\nCREATE UNIQUE INDEX log_consumptions_unique_v1_idx ON public.log_consumptions USING btree (job_id, block_hash, log_index);\nCREATE UNIQUE INDEX log_consumptions_unique_v2_idx ON public.log_consumptions USING btree (job_id_v2, block_hash, log_index);\nCREATE INDEX p2p_peers_id ON public.p2p_peers USING btree (id);\nCREATE INDEX p2p_peers_peer_id ON public.p2p_peers USING btree (peer_id);\nCREATE INDEX sync_events_id_created_at_idx ON public.sync_events USING btree (id, created_at);\nCREATE TRIGGER notify_eth_tx_insertion AFTER INSERT ON public.eth_txes FOR EACH STATEMENT EXECUTE PROCEDURE public.notifyethtxinsertion();\nCREATE TRIGGER notify_job_created AFTER INSERT ON public.jobs FOR EACH ROW EXECUTE PROCEDURE public.notifyjobcreated();\nCREATE TRIGGER notify_job_deleted AFTER DELETE ON public.jobs FOR EACH ROW EXECUTE PROCEDURE public.notifyjobdeleted();\nCREATE TRIGGER notify_pipeline_run_started AFTER INSERT ON public.pipeline_runs FOR EACH ROW EXECUTE PROCEDURE public.notifypipelinerunstarted();\nALTER TABLE ONLY public.eth_receipts\n    ADD CONSTRAINT eth_receipts_tx_hash_fkey FOREIGN KEY (tx_hash) REFERENCES public.eth_tx_attempts(hash) ON DELETE CASCADE;\nALTER TABLE ONLY public.eth_task_run_txes\n    ADD CONSTRAINT eth_task_run_txes_eth_tx_id_fkey FOREIGN KEY (eth_tx_id) REFERENCES public.eth_txes(id) ON DELETE CASCADE;\nALTER TABLE ONLY public.eth_task_run_txes\n    ADD CONSTRAINT eth_task_run_txes_task_run_id_fkey FOREIGN KEY (task_run_id) REFERENCES public.task_runs(id) ON DELETE CASCADE;\nALTER TABLE ONLY public.eth_tx_attempts\n    ADD CONSTRAINT eth_tx_attempts_eth_tx_id_fkey FOREIGN KEY (eth_tx_id) REFERENCES public.eth_txes(id) ON DELETE CASCADE;\nALTER TABLE ONLY public.eth_txes\n    ADD CONSTRAINT eth_txes_from_address_fkey FOREIGN KEY (from_address) REFERENCES public.keys(address);\nALTER TABLE ONLY public.initiators\n    ADD CONSTRAINT fk_initiators_job_spec_id FOREIGN KEY (job_spec_id) REFERENCES public.job_specs(id) ON DELETE RESTRICT;\nALTER TABLE ONLY public.job_runs\n    ADD CONSTRAINT fk_job_runs_initiator_id FOREIGN KEY (initiator_id) REFERENCES public.initiators(id) ON DELETE CASCADE;\nALTER TABLE ONLY public.job_runs\n    ADD CONSTRAINT fk_job_runs_result_id FOREIGN KEY (result_id) REFERENCES public.run_results(id) ON DELETE CASCADE;\nALTER TABLE ONLY public.job_runs\n    ADD CONSTRAINT fk_job_runs_run_request_id FOREIGN KEY (run_request_id) REFERENCES public.run_requests(id) ON DELETE CASCADE;\nALTER TABLE ONLY public.service_agreements\n    ADD CONSTRAINT fk_service_agreements_encumbrance_id FOREIGN KEY (encumbrance_id) REFERENCES public.encumbrances(id) ON DELETE RESTRICT;\nALTER TABLE ONLY public.task_runs\n    ADD CONSTRAINT fk_task_runs_result_id FOREIGN KEY (result_id) REFERENCES public.run_results(id) ON DELETE CASCADE;\nALTER TABLE ONLY public.task_runs\n    ADD CONSTRAINT fk_task_runs_task_spec_id FOREIGN KEY (task_spec_id) REFERENCES public.task_specs(id) ON DELETE CASCADE;\nALTER TABLE ONLY public.flux_monitor_round_stats\n    ADD CONSTRAINT flux_monitor_round_stats_job_run_id_fkey FOREIGN KEY (job_run_id) REFERENCES public.job_runs(id) ON DELETE CASCADE;\nALTER TABLE ONLY public.job_runs\n    ADD CONSTRAINT job_runs_job_spec_id_fkey FOREIGN KEY (job_spec_id) REFERENCES public.job_specs(id) ON DELETE CASCADE;\nALTER TABLE ONLY public.job_spec_errors\n    ADD CONSTRAINT job_spec_errors_job_spec_id_fkey FOREIGN KEY (job_spec_id) REFERENCES public.job_specs(id) ON DELETE CASCADE;\nALTER TABLE ONLY public.job_spec_errors_v2\n    ADD CONSTRAINT job_spec_errors_v2_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id) ON DELETE CASCADE;\nALTER TABLE ONLY public.jobs\n    ADD CONSTRAINT jobs_direct_request_spec_id_fkey FOREIGN KEY (direct_request_spec_id) REFERENCES public.direct_request_specs(id);\nALTER TABLE ONLY public.jobs\n    ADD CONSTRAINT jobs_flux_monitor_spec_id_fkey FOREIGN KEY (flux_monitor_spec_id) REFERENCES public.flux_monitor_specs(id);\nALTER TABLE ONLY public.jobs\n    ADD CONSTRAINT jobs_offchainreporting_oracle_spec_id_fkey FOREIGN KEY (offchainreporting_oracle_spec_id) REFERENCES public.offchainreporting_oracle_specs(id) ON DELETE CASCADE;\nALTER TABLE ONLY public.jobs\n    ADD CONSTRAINT jobs_pipeline_spec_id_fkey FOREIGN KEY (pipeline_spec_id) REFERENCES public.pipeline_specs(id) ON DELETE CASCADE;\nALTER TABLE ONLY public.log_consumptions\n    ADD CONSTRAINT log_consumptions_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.job_specs(id) ON DELETE CASCADE;\nALTER TABLE ONLY public.log_consumptions\n    ADD CONSTRAINT log_consumptions_job_id_v2_fkey FOREIGN KEY (job_id_v2) REFERENCES public.jobs(id) ON DELETE CASCADE;\nALTER TABLE ONLY public.offchainreporting_contract_configs\n    ADD CONSTRAINT offchainreporting_contract_co_offchainreporting_oracle_spe_fkey FOREIGN KEY (offchainreporting_oracle_spec_id) REFERENCES public.offchainreporting_oracle_specs(id) ON DELETE CASCADE;\nALTER TABLE ONLY public.offchainreporting_oracle_specs\n    ADD CONSTRAINT offchainreporting_oracle_specs_encrypted_ocr_key_bundle_id_fkey FOREIGN KEY (encrypted_ocr_key_bundle_id) REFERENCES public.encrypted_ocr_key_bundles(id);\nALTER TABLE ONLY public.offchainreporting_oracle_specs\n    ADD CONSTRAINT offchainreporting_oracle_specs_p2p_peer_id_fkey FOREIGN KEY (p2p_peer_id) REFERENCES public.encrypted_p2p_keys(peer_id);\nALTER TABLE ONLY public.offchainreporting_oracle_specs\n    ADD CONSTRAINT offchainreporting_oracle_specs_transmitter_address_fkey FOREIGN KEY (transmitter_address) REFERENCES public.keys(address);\nALTER TABLE ONLY public.offchainreporting_pending_transmissions\n    ADD CONSTRAINT offchainreporting_pending_tra_offchainreporting_oracle_spe_fkey FOREIGN KEY (offchainreporting_oracle_spec_id) REFERENCES public.offchainreporting_oracle_specs(id) ON DELETE CASCADE;\nALTER TABLE ONLY public.offchainreporting_persistent_states\n    ADD CONSTRAINT offchainreporting_persistent__offchainreporting_oracle_spe_fkey FOREIGN KEY (offchainreporting_oracle_spec_id) REFERENCES public.offchainreporting_oracle_specs(id) ON DELETE CASCADE;\nALTER TABLE ONLY public.p2p_peers\n    ADD CONSTRAINT p2p_peers_peer_id_fkey FOREIGN KEY (peer_id) REFERENCES public.encrypted_p2p_keys(peer_id) DEFERRABLE;\nALTER TABLE ONLY public.pipeline_runs\n    ADD CONSTRAINT pipeline_runs_pipeline_spec_id_fkey FOREIGN KEY (pipeline_spec_id) REFERENCES public.pipeline_specs(id) ON DELETE CASCADE DEFERRABLE;\nALTER TABLE ONLY public.pipeline_task_runs\n    ADD CONSTRAINT pipeline_task_runs_pipeline_run_id_fkey FOREIGN KEY (pipeline_run_id) REFERENCES public.pipeline_runs(id) ON DELETE CASCADE DEFERRABLE;\nALTER TABLE ONLY public.pipeline_task_runs\n    ADD CONSTRAINT pipeline_task_runs_pipeline_task_spec_id_fkey FOREIGN KEY (pipeline_task_spec_id) REFERENCES public.pipeline_task_specs(id) ON DELETE CASCADE DEFERRABLE;\nALTER TABLE ONLY public.pipeline_task_specs\n    ADD CONSTRAINT pipeline_task_specs_pipeline_spec_id_fkey FOREIGN KEY (pipeline_spec_id) REFERENCES public.pipeline_specs(id) ON DELETE CASCADE DEFERRABLE;\nALTER TABLE ONLY public.pipeline_task_specs\n    ADD CONSTRAINT pipeline_task_specs_successor_id_fkey FOREIGN KEY (successor_id) REFERENCES public.pipeline_task_specs(id) DEFERRABLE;\nALTER TABLE ONLY public.service_agreements\n    ADD CONSTRAINT service_agreements_job_spec_id_fkey FOREIGN KEY (job_spec_id) REFERENCES public.job_specs(id) ON DELETE CASCADE;\nALTER TABLE ONLY public.task_runs\n    ADD CONSTRAINT task_runs_job_run_id_fkey FOREIGN KEY (job_run_id) REFERENCES public.job_runs(id) ON DELETE CASCADE;\nALTER TABLE ONLY public.task_specs\n    ADD CONSTRAINT task_specs_job_spec_id_fkey FOREIGN KEY (job_spec_id) REFERENCES public.job_specs(id) ON DELETE CASCADE;\n": ERROR: syntax error at or near "AS" (SQLSTATE 42601)
